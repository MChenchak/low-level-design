1.  Первым делом при проектировании АТД нужно определить тип(класс), который задаст допустимое множество объектов.
    Определить тип по сути означает задать название класса. В языке Java для определения АТД существуют абстрактные классы.
    Так же при необходимости нужно задать тип-параметр, основываясь на ограничениях типа, с которыми может работать
    реализация АТД.

    В случае с задачей ограниченного стека решением для первого шага было создание абстрактного класса AbstractBoundedStack<T>
    с параметром Т.

    public abstract class AbstractBoundedStack<T> {}

    Такое решение соответствует эталонному за исключением названия самого АТД:
    AbstractBoundedStack вместо BoundedStack (это произошло из-за недопонимания задания).

2. Нужно сформировать список методов и их сигнатуры.
    В эталонном варианте методы сгруппированы в 3 группы: конструкторы, команды и запросы. Я же такой группировки не делал.

    Конструктор: я упустил конструктор, который должен принимать в качестве параметра максимальный размер стека.
    При проектировании нужно задавать себе вопрос какие общие ограничения для всех реализаций можно выразить через конструктор.
    В данном случае ограничение - у ограниченного стека не может быть бесконечного количества элементов. Это количество должно быть задано.

    команды:
    push: пред- и постусловия определены корректно
    pop: пред- и постусловия определены корректно
    clear: постусловие определено корректно

    запросы:
    peek: предусловие определено корректно
    size: не требует условий
    max_size: такой запрос я не указал, хотя он необходим для проверки предусловия команды push.
    Значит написав предусловие к методу нужно задать себе вопрос: "как проверить это предусловие?"

3. Правильно составить машину состояний мне не удалось.
    Во-первых, константы состояний я поместил в реализацию АТД (неправильно понял задание)
    Во-вторых, не учел состояния для команды push. почему его нужно было учесть?


