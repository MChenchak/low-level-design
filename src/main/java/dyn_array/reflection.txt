Я решил реализовать АТД DynArray с помощью наслеедования и расширил АТД ParentList, рееализованный в прошлом занятии.
Эталонное решение - самостоятельный АТД DynArray<T> без наследования.

Возможно моя ошибка заключается в том, что при реализации АТД(DynArray) в случае наследования придется реализовывть и
"лишние" методы, такие как head() и tail(), которые динамическому массиву не нужны, т.к есть доступ к объектам по индексу.

С методами left и right аналогичная ситуация.

Метод append() я решил рассматривать как put_right. Но тут опять же вставка работает не по индексу, а относительно "позиции"
курсора.

Вывод: при проектировании АТД нужно спросить себя является ли проектируемый АТД наследником другого АТД. Если в основе
обоих АТД лежит одна и та же концепция, то очень вероятно, что отношения между ними можно выразить через наследование.
Если в основе разные концепции, то наследования нет.
В основе ParentList лежит концепция курсора, а в DynArray - индекса.